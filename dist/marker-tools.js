!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.markerTools=t():e.markerTools=t()}(this,(()=>(()=>{"use strict";var e={776:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Cluster=void 0,t.Cluster=class{constructor(e){this.$naver=e.$naver,this._clusterCenter=null,this._clusterBounds=null,this._clusterMarker=null,this._relation=null,this._clusterMember=[],this._markerClusterer=e}addMarker(e){if(!this._isMember(e)){if(!this._clusterCenter){const t=e.getPosition();this._clusterCenter=t,this._clusterBounds=this._calcBounds(t)}this._clusterMember.push(e)}}destroy(){this.$naver.maps.Event.removeListener(this._relation);const e=this._clusterMember;for(let t=0,s=e.length;t<s;t+=1)e[t].setMap(null);this._clusterMarker.setMap(null),this._clusterMarker=null,this._clusterCenter=null,this._clusterBounds=null,this._relation=null,this._clusterMember=[]}getCenter(){return this._clusterCenter}getBounds(){return this._clusterBounds}getCount(){return this._clusterMember.length}getClusterMember(){return this._clusterMember}isInBounds(e){return this._clusterBounds&&this._clusterBounds.hasLatLng(e)}enableClickZoom(){if(this._relation)return;const e=this._markerClusterer.getMap();this._relation=this.$naver.maps.Event.addListener(this._clusterMarker,"click",(t=>{e.morph(t.coord,e.getZoom()+1)}))}disableClickZoom(){this._relation&&(this.$naver.maps.Event.removeListener(this._relation),this._relation=null)}updateCluster(){if(!this._clusterMarker){let e;e=this._markerClusterer.getAverageCenter()?this._calcAverageCenter(this._clusterMember):this._clusterCenter,this._clusterMarker=new this.$naver.maps.Marker({position:e,map:this._markerClusterer.getMap()}),this._markerClusterer.getDisableClickZoom()||this.enableClickZoom()}this.updateIcon(),this.updateCount(),this.checkByZoomAndMinClusterSize()}checkByZoomAndMinClusterSize(){const e=this._markerClusterer,t=e.getMinClusterSize(),s=e.getMaxZoom(),r=e.getMap().getZoom();this.getCount()<t?this._showMember():(this._hideMember(),s<=r&&this._showMember())}updateCount(){const e=this._markerClusterer.getStylingFunction();e&&e(this._clusterMarker,this.getCount())}updateIcon(){const e=this.getCount();let t=this._getIndex(e);const s=this._markerClusterer.getIcons();t=Math.max(t,0),t=Math.min(t,s.length-1),this._clusterMarker.setIcon(s[t])}_showMember(){const e=this._markerClusterer.getMap(),t=this._clusterMarker,s=this._clusterMember;for(let t=0,r=s.length;t<r;t+=1)s[t].setMap(e);t&&t.setMap(null)}_hideMember(){const e=this._markerClusterer.getMap(),t=this._clusterMarker,s=this._clusterMember;for(let e=0,t=s.length;e<t;e+=1)s[e].setMap(null);t&&!t.getMap()&&t.setMap(e)}_calcBounds(e){const t=this._markerClusterer.getMap(),s=new this.$naver.maps.LatLngBounds(e.clone(),e.clone()),r=t.getBounds(),i=t.getProjection(),n=i.fromCoordToOffset(r.getNE()),o=i.fromCoordToOffset(r.getSW()),a=i.fromCoordToOffset(s.getNE()),l=i.fromCoordToOffset(s.getSW()),u=this._markerClusterer.getGridSize()/2;a.add(u,-u),l.add(-u,u);const h=Math.min(n.x,a.x),c=Math.max(n.y,a.y),m=Math.max(o.x,l.x),g=Math.min(o.y,l.y),_=i.fromOffsetToCoord(new this.$naver.maps.Point(h,c)),d=i.fromOffsetToCoord(new this.$naver.maps.Point(m,g));return new this.$naver.maps.LatLngBounds(d,_)}_getIndex(e){const t=this._markerClusterer.getIndexGenerator();if(Array.isArray(t)){let s=0;for(let r=s,i=t.length;r<i&&!(e<t[r]);r+=1)s+=1;return s}return t(e)}_isMember(e){return-1!==this._clusterMember.indexOf(e)}_calcAverageCenter(e){const t=e.length,s=[0,0];for(let r=0;r<t;r+=1)s[0]+=e[r].position.x,s[1]+=e[r].position.y;return s[0]/=t,s[1]/=t,new this.$naver.maps.Point(s[0],s[1])}}},434:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MarkerClusteringWrapper=void 0;const r=s(776);t.MarkerClusteringWrapper=class{constructor(e,t){class s extends e.maps.OverlayView{constructor(e,t){super(),this.$naver=e,this.DEFAULT_OPTIONS={map:null,markers:[],disableClickZoom:!0,minClusterSize:2,maxZoom:13,gridSize:100,icons:[],indexGenerator:[10,100,200,500,1e3],averageCenter:!1,stylingFunction(){}},this._clusters=[],this._mapRelations=null,this._markerRelations=[],this.setOptions({...this.DEFAULT_OPTIONS,...t},!0),this.setMap(t.map||null)}onAdd(){const e=this.getMap();this._mapRelations=this.$naver.maps.Event.addListener(e,"idle",(()=>{this._onIdle()})),this.getMarkers().length>0&&(this._createClusters(),this._updateClusters())}draw(){}onRemove(){this.$naver.maps.Event.removeListener(this._mapRelation),this._clearClusters(),this._geoTree=null,this._mapRelation=null}setOptions(e,t){const s=this;if("string"==typeof e){const r=e,i=t;s.set(r,i)}else{const r=t;Object.entries(e).forEach((([e,t])=>{"map"!==e&&s.set(e,t)})),e.map&&!r&&s.setMap(e.map)}}getOptions(e){const t=this,s={};return void 0!==e?t.get(e):(Object.entries(t.DEFAULT_OPTIONS).forEach((([e,r])=>{s[e]=t.get(e)})),s)}getMinClusterSize(){return this.getOptions("minClusterSize")}setMinClusterSize(e){this.setOptions("minClusterSize",e)}getMaxZoom(){return this.getOptions("maxZoom")}setMaxZoom(e){this.setOptions("maxZoom",e)}getGridSize(){return this.getOptions("gridSize")}setGridSize(e){this.setOptions("gridSize",e)}getIndexGenerator(){return this.getOptions("indexGenerator")}setIndexGenerator(e){this.setOptions("indexGenerator",e)}getMarkers(){return this.getOptions("markers")}setMarkers(e){this.setOptions("markers",e)}getIcons(){return this.getOptions("icons")}setIcons(e){this.setOptions("icons",e)}getStylingFunction(){return this.getOptions("stylingFunction")}setStylingFunction(e){this.setOptions("stylingFunction",e)}getDisableClickZoom(){return this.getOptions("disableClickZoom")}setDisableClickZoom(e){this.setOptions("disableClickZoom",e)}getAverageCenter(){return this.getOptions("averageCenter")}setAverageCenter(e){this.setOptions("averageCenter",e)}changed(e,t){if(this.getMap())switch(e){case"marker":case"minClusterSize":case"gridSize":case"averageCenter":this._redraw();break;case"indexGenerator":case"icons":this._clusters.forEach((e=>{e.updateIcon()}));break;case"maxZoom":this._clusters.forEach((e=>{e.getCount()>1&&e.checkByZoomAndMinClusterSize()}));break;case"stylingFunction":this._clusters.forEach((e=>{e.updateCount()}));break;case"disableClickZoom":this._clusters.forEach((e=>{e[t?"disableClickZoom":"enableClickZoom"]()}))}}_createClusters(){const e=this.getMap();if(!e)return;const t=e.getBounds(),s=this.getMarkers();for(let e=0,r=s.length;e<r;e+=1){const r=s[e],i=r.getPosition();t.hasLatLng(i)&&(this._getClosestCluster(i).addMarker(r),this._markerRelations.push(this.$naver.maps.Event.addListener(r,"dragend",(()=>{this._onDragEnd()}))))}}_updateClusters(){const e=this._clusters;for(let t=0,s=e.length;t<s;t+=1)e[t].updateCluster()}_clearClusters(){const e=this._clusters;for(let t=0,s=e.length;t<s;t+=1)e[t].destroy();this.$naver.maps.Event.removeListener(this._markerRelations),this._markerRelations=[],this._clusters=[]}_redraw(){this._clearClusters(),this._createClusters(),this._updateClusters()}_getClosestCluster(e){const t=this.getProjection(),s=this._clusters;let i=null,n=1/0;for(let r=0,o=s.length;r<o;r+=1){const o=s[r],a=o.getCenter();if(o.isInBounds(e)){const s=t.getDistance(a,e);s<n&&(n=s,i=o)}}return i||(i=new r.Cluster(this),this._clusters.push(i)),i}_onIdle(){this._redraw()}_onDragEnd(){this._redraw()}}this.markerClustering=new s(e,t)}}}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}var r={};return(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.MarkerClusteringWrapper=void 0;const t=s(434);Object.defineProperty(e,"MarkerClusteringWrapper",{enumerable:!0,get:function(){return t.MarkerClusteringWrapper}})})(),r})()));